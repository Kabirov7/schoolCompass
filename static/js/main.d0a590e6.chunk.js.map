{"version":3,"sources":["Components/form/radiobutton.js","Components/form/checkBox.js","Components/form/SelectBox.js","Components/Charts/Scatter.js","util/firebase.js","Components/axisAverrage/ScatterLineResult.js","Components/axisAverrage/PrecentOfAnswered.js","util/Auth.js","Components/MainPages/Home.js","Components/Auth/LogIn.js","Components/Auth/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["RadioButton","props","React","useState","value","setValue","index","ans","useEffect","id","className","title","FormControl","const","RadioGroup","aria-label","name","onChange","event","target","returnAnswer","answers","map","el","i","FormControlLabel","control","Radio","label","message","CheckBox","FormGroup","Checkbox","checked","returnAxisName","key","useStyles","makeStyles","theme","formControl","minWidth","li","fontSize","SelectBox","classes","open","setOpen","response","disabled","locked","InputLabel","Select","labelId","onClose","onOpen","indexOf","returnAnketsAnswer","MenuItem","paddingBottom","Scatter","color","partyColor","axises","names","symbolSize","data","type","symbol","emphasis","show","formatter","position","push","myAxis","fontWeight","style","height","option","legend","orient","top","left","grid","z","bottom","xAxis","min","max","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","ScatterLine","distanceIs","minDistance","Infinity","distance","require","partyAxises","partyAxis","axisAverrage","textAlign","axisName","parseFloat","toFixed","axisPoints","minus","plus","aria-role","width","axisNearest","PrecentOfAnswered","lengthQuestion","lenQuestions","precentOfAnswered","currentQuestions","Math","ceil","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","app","onAuthStateChanged","Provider","queryString","Home","state","questions","main_title","gateway","notAnswered","axis_points","total_axis","axis_title_values","axis_values","axis","axis_title","axises_object","axis_names","all_axis","answer_title_values","answer_values","answer_values_males","count_axises","compass_compare","default_axises","all_axis_averrage","batch_axises","onlyTwoCheckBox","showAnswers","questions_on_page","first_questions","anket","anket_all_answers","anketa_questions","anket_answers","axis_legends","legendary","nearestTeacher","compass_url","saveData","saved","downloadData","urlString","parse","window","location","search","decode","console","log","fetch","then","json","setState","getNotAnswered","pl","elToIntArr","array","forEach","Number","currentQset","slice","idxsOfAnswered","Object","keys","filter","answer","axis_name","getAxisMainTemplate","mainTemplate","length","assign","getAxisTemplate","axis_index","axis_object","template","entries","item","undefined","reverse","returnAxis","getAxis","index_question","state_answers","axises_names","axis_count","axs","answer_type","answer_type_index","answer_index","axis_type","axis_type_index","axis_is","sort","Set","difference","lastIndexOf","getAxisAverage","sum","values","distanceEuclid","positionInfo","axises_object_keys","axises_object_values","axises_idx","item_index","default_axis","axis_idx","idx","legendByAxis","legendsByAxis","legendIs","itIs","legends","indexAxisByName","saving_data","firestore","collection","doc","uid","set","mail","email","gender","grade","this","questionList","type_answers","index_type","checkbox","chart","axisesNames","topFunction","document","body","scrollTop","documentElement","nextAndScrollTop","whichNotAnswered","getElementById","scrollIntoView","behavior","block","previousAndScrollTop","onClick","signOut","result","d","minIs","resultTeacher","previousPageShowing","display","forms","Component","LogIn","history","useContext","to","signInWithPopup","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exreact","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d0a590e6.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport \"../../App.css\"\r\n\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\tconst {ans} = props\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ans){\r\n\t\t\tsetValue(ans)\r\n\t\t}\r\n\t}, {ans})\r\n\r\n\treturn (\r\n\t\t<div id={props.id}>\r\n\t\t\t<h4 className=\"question_title\">{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title}  name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel className=\"question_item\" key={i} value={el} control={<Radio/> } label={el}/>)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t\t<div className=\"chooseAnswer padding_margin\">\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport \"../../App.css\"\r\n\r\nexport default function CheckBox(props) {\r\n\tconst [value, setValue] = React.useState(false)\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.checked)\r\n\t\tprops.returnAxisName(event.target.checked, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={<Checkbox className=\"question_item\" checked={value} onChange={handleChange} key={props.key}\r\n\t\t\t\t\t                   value={props.name}/>}\r\n\t\t\t\t\tlabel={props.title}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t)\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport \"../../App.css\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n\tli:{\r\n\t\tfontSize:\"15px\",\r\n\t}\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnketsAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className={\"question_title\"}>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem className={classes.li} key={i} value={el.value}>{el.name}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\nimport \"../../App.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tpaddingBottom: 0,\r\n\t},\r\n}));\r\n\r\nexport default function Scatter(props) {\r\n\tconst classes = useStyles();\r\n\tconst color = props.partyColor\r\n\tlet axises = props.axises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [el],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tsymbol: 'circle',\r\n\t\t\tcolor: color[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 22,\r\n\t\tdata: [props.myAxis],\r\n\t\ttype: 'scatter',\r\n\t\tsymbol: \"diamond\",\r\n\t\tname: \"Я\",\r\n\t\tcolor: 'red',\r\n\t\tlabel: {\r\n\t\t\tshow: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tformatter: \"Я\",\r\n\t\t\tfontWeight: \"bold\"\r\n\r\n\t\t}\r\n\t})\r\n\r\n\tconst getOption = () => ({\r\n\t\tcolor: color,\r\n\t\tlegend: {\r\n\t\t\tshow: true,\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\theight: 'auto',\r\n\t\t\ttop: \"3%\",\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tz: 2,\r\n\t\t\ttop: \"30%\",\r\n\t\t\theight: \"50%\",\r\n\t\t\tbottom: \"10%\"\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tname: 'x',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tname: 'y',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tseries: axises\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.formControl}>\r\n\t\t\t\t\t<ReactEcharts style={{height: \"550px\"}} option={getOption()}/>\r\n\t\t</div>\r\n\t);\r\n}","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyADuNBmOC6WQ9ON-CLTZeTDyaLA1J27IsA\",\r\n  authDomain: \"schoolcompasste.firebaseapp.com\",\r\n  databaseURL: \"https://schoolcompasste.firebaseio.com\",\r\n  projectId: \"schoolcompasste\",\r\n  storageBucket: \"schoolcompasste.appspot.com\",\r\n  messagingSenderId: \"241085209563\",\r\n  appId: \"1:241085209563:web:7fca7ce98e24d9a150e5fe\",\r\n  measurementId: \"G-ZM7XRNRQN0\"\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tfirebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signInAnonymously = () => {\r\n\tfirebase.auth().signInAnonymously()\r\n}\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\nimport \"../../App.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\theight: 60,\r\n\t},\r\n}));\r\n\r\nexport default function ScatterLine(props) {\r\n\tconst classes = useStyles()\r\n\tlet distanceIs;\r\n\tlet minDistance = Infinity\r\n\tlet position;\r\n\tlet distance = require('euclidean-distance')\r\n\tconst partyColor = props.partyColor\r\n\r\n\tlet axises = props.partyAxises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [[el[props.index], 0]],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tsymbol: \"circle\",\r\n\t\t\tcolor: partyColor[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get min distance\r\n\t\tdistanceIs = distance([props.axisAverrage, 0], [el[props.index], 0])\r\n\t\tif (distanceIs < minDistance) {\r\n\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\tposition = {\r\n\t\t\t\tdistance: minDistance,\r\n\t\t\t\ttitle: props.names[i],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 22,\r\n\t\tdata: [[props.axisAverrage, 0]],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'red',\r\n\t\tsymbol: \"diamond\",\r\n\t\tlabel: {\r\n\t\t\tshow: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tformatter: \"Я\",\r\n\t\t\tfontWeight: \"bold\"\r\n\r\n\t\t},\r\n\t\temphasis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: \"Я\",\r\n\t\t\t\tposition: 'top'\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tconst getOption = () => ({\r\n\t\tcolor: partyColor,\r\n\t\tlegend: {\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\tbottom: \"0%\",\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tshow: false\r\n\t\t},\r\n\t\theight: 0,\r\n\t\tseries: axises,\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='scatter-line'>\r\n\t\t\t<div className={\"nameAxis\"}>\r\n\t\t\t\t<h5 style={{textAlign: \"center\"}}>{props.axisName}: {parseFloat(props.axisAverrage).toFixed(2)}</h5>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={\"decision\"}>\r\n\t\t\t\t\t<p className={\"minus\"}>\r\n\t\t\t\t\t\t{props.axisPoints.minus}<br/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className={\"plus\"}>{props.axisPoints.plus}<br/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"arrows\"}>\r\n\t\t\t\t\t<i className=\"em em-arrow_left\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t\t<i className=\"em em-arrow_right\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ReactEcharts style={{height: \"250px\"}} className={`scatter`} option={getOption()}/>\r\n\t\t\t</div>\r\n\t\t\t<h4>{props.axisNearest} — \"{position.title}\"</h4>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from \"react\";\r\nimport \"../../App.css\"\r\n\r\n\r\nexport default function PrecentOfAnswered(props){\r\n\tconst lengthQuestion = props.lenQuestions\r\n\tconst current = props.currentQuestions;\r\n\r\n\tconst precentOfAnswered = (current*100)/lengthQuestion\r\n\treturn(\r\n\t\t<div style={{textAlign:\"center\"}}>\r\n\t\t\t<h4 id=\"precentOfAnswered\" className=\"question_title\">\r\n\t\t\t\tВы заполнили компас на {Math.ceil(precentOfAnswered)}%\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect, useState} from \"react\";\nimport app from './firebase';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n\tconst [currentUser, setCurrentUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tapp.auth().onAuthStateChanged(setCurrentUser)\n\t}, []);\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{currentUser}}>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t)\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport '../../App.css'\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport CheckBox from \"../form/checkBox\";\r\nimport SelectBox from \"../form/SelectBox\";\r\nimport Scatter from \"../Charts/Scatter\";\r\nimport firebase from \"../../util/firebase\";\r\nimport ScatterLine from \"../axisAverrage/ScatterLineResult\";\r\nimport PrecentOfAnswered from \"../axisAverrage/PrecentOfAnswered\";\r\nimport app from \"../../util/firebase\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {AuthProvider} from \"../../util/Auth\";\r\n\r\n\r\nlet distance = require('euclidean-distance')\r\n\r\n\r\nconst queryString = require('query-string')\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\tquestions: [],\r\n\t\tmain_title: '',\r\n\t\tgateway: '',\r\n\t\tanswers: {},\r\n\t\tnotAnswered: [],\r\n\t\taxises: {},\r\n\t\taxis_points: [],\r\n\t\ttotal_axis: [],\r\n\t\taxis_title_values: [],\r\n\t\taxis_values: [],\r\n\t\tposition: {},\r\n\t\taxis: [],\r\n\t\taxis_title: [],\r\n\t\taxises_object: [],\r\n\t\taxis_names: {},\r\n\t\tall_axis: {},\r\n\t\tanswer_title_values: [],\r\n\t\tanswer_values: [\"da\"],\r\n\t\tanswer_values_males: [],\r\n\t\tcount_axises: [],\r\n\t\tcompass_compare: {},\r\n\t\tdefault_axises: [],\r\n\t\tall_axis_averrage: [],\r\n\t\tbatch_axises: [],\r\n\t\tonlyTwoCheckBox: true,\r\n\t\tshowAnswers: false,\r\n\t\tquestions_on_page: 0,\r\n\t\tfirst_questions: 0,\r\n\t\tpartyColor: [],\r\n\t\tanket: false,\r\n\t\tanket_all_answers: 1,\r\n\t\tanketa_questions: [],\r\n\t\tanket_answers: [],\r\n\t\taxis_legends: [],\r\n\t\tlegendary: [],\r\n\t\tnearestTeacher: {},\r\n\t\tcompass_url: \"\",\r\n\t\tsaveData: false,\r\n\t\taxisNearest: [],\r\n\t\tcurrentUser: {},\r\n\t\tsaved: false\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\r\n\t\tthis.setState({currentUser: firebase.auth().currentUser})\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/schoolCompass_json/main/config_schoolCompass_test.json')\r\n\t\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/schoolCompass_json/main/config_schoolCompass.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title,\r\n\t\t\t\t\t\tgateway: data.gateway,\r\n\t\t\t\t\t\tcompass_compare: data.compass_compare,\r\n\t\t\t\t\t\taxis: data.axises,\r\n\t\t\t\t\t\taxis_title: data.axis_title,\r\n\t\t\t\t\t\taxis_title_values: data.axis_title_values,\r\n\t\t\t\t\t\taxis_values: data.axis_values,\r\n\t\t\t\t\t\tanswer_title_values: data.answer_title_values,\r\n\t\t\t\t\t\tanswer_values_males: data.answer_values,\r\n\t\t\t\t\t\taxises_object: data.axises_object,\r\n\t\t\t\t\t\tquestions_on_page: data.questions_on_page,\r\n\t\t\t\t\t\taxis_points: data.axis_points,\r\n\t\t\t\t\t\tpartyColor: data.partyColor,\r\n\t\t\t\t\t\tanketa_questions: data.anket,\r\n\t\t\t\t\t\taxis_legends: data.axis_legends,\r\n\t\t\t\t\t\tcompass_url: data.compass_url,\r\n\t\t\t\t\t\taxisNearest: data.axisNearest,\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tgetNotAnswered = (state, pl) => {\r\n\r\n\t\tfunction elToIntArr(array) {\r\n\t\t\tarray.forEach((i, index) => {\r\n\t\t\t\tarray[index] = Number(array[index])\r\n\t\t\t})\r\n\t\t\treturn array\r\n\t\t}\r\n\r\n\t\tlet currentQset;\r\n\t\tif (pl == \"plus\") {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page);\r\n\t\t} else if (pl == 'minus') {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions - this.state.questions_on_page);\r\n\t\t}\r\n\r\n\r\n\t\tlet idxsOfAnswered = elToIntArr(Object.keys(state.answers))\r\n\t\tcurrentQset = elToIntArr(Object.keys(currentQset))\r\n\r\n\t\tlet whichNotAnswered = currentQset.filter((i) => idxsOfAnswered.indexOf(this.state.first_questions + i) == -1);\r\n\r\n\t\treturn whichNotAnswered\r\n\t}\r\n\r\n\treturnAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({answers: answers})\r\n\t}\r\n\r\n\treturnAnketsAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.anket_answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({anket_answers: answers})\r\n\t}\r\n\r\n\treturnAxisName = (axis_name, index) => {\r\n\t\tlet axises = {...this.state.axis_names}\r\n\t\taxises[index] = axis_name\r\n\t\tthis.setState({axis_names: axises})\r\n\t}\r\n\r\n\tgetAxisMainTemplate = (state) => {\r\n\t\tlet mainTemplate;\r\n\t\tfor (let i = 0; i < state.axises_object.length + 1; i++) {\r\n\t\t\tmainTemplate = Object.assign({}, state.axises_object[i], state.axises_object[i + 1], mainTemplate)\r\n\t\t}\r\n\t\treturn mainTemplate;\r\n\t}\r\n\r\n\tgetAxisTemplate = (state) => {\r\n\t\tlet axis_names = [];\r\n\t\tlet axis, axis_index, axis_object;\r\n\t\tlet all_axis;\r\n\t\tlet template = Object.entries(state.axis_names).map((item) => {\r\n\t\t\taxis = item[1]\r\n\t\t\taxis_index = item[0]\r\n\t\t\taxis_object = state.axises_object[axis_index]\r\n\t\t\tif (axis) {\r\n\t\t\t\taxis_names.push(axis_object)\r\n\t\t\t\treturn axis_object\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\ttemplate = template.filter(item => item !== undefined)\r\n\t\ttemplate = template.reverse()\r\n\t\tfor (let i = 0; i < template.length + 1; i++) {\r\n\t\t\tif (i != template.length) {\r\n\t\t\t\tall_axis = Object.assign({}, template[i], template[i + 1], all_axis)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn all_axis;\r\n\t\tthis.setState({all_axis: all_axis})\r\n\t}\r\n\r\n\treturnAxis = (axis) => {\r\n\t\tlet axises = {...this.state.axises}\r\n\t\taxises = axis\r\n\t\tthis.setState({axises: axises})\r\n\t}\r\n\r\n\tgetAxis = (state) => {\r\n\t\tlet state_answers = Object.entries(state.answers);\r\n\r\n\t\tlet axises_names = [];\r\n\t\tlet axis_count = {};\r\n\t\tlet answer, index_question;\r\n\r\n\t\tlet axs = state_answers.map((item, index, array) => {\r\n\t\t\tindex_question = item[0]\r\n\t\t\tanswer = item[1]\r\n\t\t\tlet answer_type = state.questions[index_question].answer;\r\n\t\t\tlet answer_type_index = state.answer_title_values.indexOf(answer_type)\r\n\t\t\tlet answers_item = state.answer_values_males[answer_type_index][state.anket_answers[0]]\r\n\t\t\tlet answer_index = answers_item.indexOf(answer)\r\n\r\n\t\t\tlet axis_type = state.questions[index_question].axis;\r\n\t\t\tlet axis_type_index = state.axis_title_values.indexOf(axis_type)\r\n\t\t\tlet axis_array = state.axis_values[axis_type_index]\r\n\t\t\tlet axis_is = axis_array[answer_index]\r\n\r\n\t\t\tObject.keys(axis_is).forEach((i) => {\r\n\t\t\t\taxises_names.push(i)\r\n\t\t\t})\r\n\r\n\t\t\treturn axis_is;\r\n\t\t})\r\n\t\taxises_names = axises_names.sort()\r\n\t\tlet unique_axis = [...new Set(axises_names)];\r\n\t\tunique_axis.forEach((item, index) => {\r\n\t\t\tlet difference = (axises_names.lastIndexOf(item) + 1) - axises_names.indexOf(item)\r\n\t\t\taxis_count[item] = difference\r\n\t\t})\r\n\r\n\t\tthis.returnAxis(axs);\r\n\t\tthis.getAxisAverage(axs, axis_count);\r\n\t};\r\n\r\n\tgetAxisAverage = (axs, axis_count) => {\r\n\t\tconst sum = this.getAxisTemplate(this.state)\r\n\t\tconst mainTemplate = this.getAxisMainTemplate(this.state)\r\n\r\n\t\tObject.values(axs).forEach(el => {\r\n\t\t\tObject.keys(el).forEach(key => {\r\n\r\n\t\t\t\tmainTemplate[key] += el[key]\r\n\t\t\t\tif (sum != undefined) {\r\n\t\t\t\t\tif (sum[key] !== undefined) {\r\n\t\t\t\t\t\tsum[key] += el[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t\tObject.keys(axis_count).forEach(key => {\r\n\t\t\tmainTemplate[key] = mainTemplate[key] / axis_count[key]\r\n\t\t})\r\n\r\n\t\tif (sum != undefined) {\r\n\t\t\tObject.keys(sum).forEach(key => {\r\n\t\t\t\tif (axis_count[key] !== undefined) {\r\n\t\t\t\t\tsum[key] = sum[key] / axis_count[key]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({all_axis_averrage: Object.values(mainTemplate).reverse()})\r\n\t\tif (sum != undefined) {\r\n\t\t\tthis.distanceEuclid(sum)\r\n\t\t}\r\n\t}\r\n\r\n\tdistanceEuclid = (axises_object) => {\r\n\t\tlet distanceIs;\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet axises = [];\r\n\t\tconst minDistances = [];\r\n\r\n\t\tlet positionInfo = {\r\n\t\t\tdistance: Infinity,\r\n\t\t\ttitle: Infinity,\r\n\t\t}\r\n\r\n\t\tlet axises_object_keys = Object.keys(axises_object);//keys of choosen axises\r\n\t\tlet axises_object_values = Object.values(axises_object);// values of choosen axises\r\n\t\tconst axises_idx = [];\r\n\r\n\r\n\t\tlet default_axises = [];\r\n\t\twhile (default_axises.length < this.state.compass_compare.axises.length) {\r\n\t\t\tdefault_axises.push([])\r\n\t\t}\r\n\r\n\t\taxises_object_keys.forEach((el, i) => {\r\n\t\t\taxises[i] = axises_object_values[i]\r\n\t\t\taxises_idx[i] = this.state.axis.indexOf(el)\r\n\t\t})\r\n\r\n\t\tthis.state.compass_compare.axises.map((item, item_index) => {\r\n\t\t\tlet default_axis = []\r\n\t\t\twhile (default_axis.length < axises_idx.length) {\r\n\t\t\t\tdefault_axis.push(0)\r\n\t\t\t}\r\n\t\t\taxises_idx.forEach((axis_idx, idx) => {\r\n\t\t\t\tdefault_axis[idx] = item[axis_idx]\r\n\t\t\t})\r\n\r\n\t\t\tdefault_axises[item_index] = default_axis\r\n\t\t})\r\n\r\n\t\tthis.setState({batch_axises: default_axises})\r\n\t\tthis.setState({total_axis: axises})\r\n\t\tif (axises.length != [0].length) {\r\n\t\t\tdefault_axises.forEach((item, index, array) => {\r\n\t\t\t\tdistanceIs = distance(axises, item);\r\n\t\t\t\tif (distanceIs < minDistance) {\r\n\t\t\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\t\t\tpositionInfo = {\r\n\t\t\t\t\t\tdistance: minDistance,\r\n\t\t\t\t\t\ttitle: this.state.compass_compare.position[index],\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({position: positionInfo})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tlegendByAxis = () => {\r\n\t\tlet legendsByAxis = []\r\n\t\tlet legendIs = this.state.axis_legends.map((el, i) => {\r\n\t\t\tlet itIs;\r\n\r\n\t\t\tlet legends = Object.values(el)\r\n\t\t\tlet indexAxisByName = this.state.axis_title.indexOf(el.name)\r\n\t\t\tlet axis = this.state.all_axis_averrage[indexAxisByName]\r\n\t\t\tif (-2 <= axis && axis < -1.11) {\r\n\t\t\t\titIs = 1\r\n\r\n\t\t\t} else if (-1.10 < axis && axis < -0.61) {\r\n\t\t\t\titIs = 2\r\n\r\n\t\t\t} else if (-0.60 < axis && axis < -0.21) {\r\n\t\t\t\titIs = 3\r\n\r\n\t\t\t} else if (-0.20 < axis && axis < 0.20) {\r\n\t\t\t\titIs = 4\r\n\r\n\t\t\t} else if (0.21 < axis && axis < 0.60) {\r\n\t\t\t\titIs = 5\r\n\r\n\t\t\t} else if (-0.61 < axis && axis < 1.10) {\r\n\t\t\t\titIs = 6\r\n\r\n\t\t\t} else if (-1.11 < axis && axis <= 2.00) {\r\n\t\t\t\titIs = 7\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlegendsByAxis[i] = itIs\r\n\t\t\treturn (<div className={\"legend\"}>\r\n\t\t\t\t<h5>{el.name}:</h5>\r\n\t\t\t\t<p>{legends[itIs]}</p>\r\n\t\t\t</div>)\r\n\t\t})\r\n\r\n\t\tif (this.state.legendary.length == [].length) {\r\n\t\t\tthis.setState({legendary: legendsByAxis})\r\n\t\t}\r\n\t\treturn legendIs\r\n\t}\r\n\r\n\tsaving_data = (state) => {\r\n\t\tfirebase.firestore().collection(\"users\").doc(this.state.currentUser.uid)\r\n\t\t\t.set({\r\n\t\t\t\tmail: state.currentUser.email,\r\n\t\t\t\tgender: state.anket_answers[0],\r\n\t\t\t\tgrade: state.anket_answers[1],\r\n\t\t\t\tanswers: this.state.all_axis_averrage,\r\n\t\t\t}).then(console.log('save'))\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tlet anket = this.state.anketa_questions.map((el, i) => {\r\n\t\t\treturn <SelectBox key={i} index={i} title={el.title} answers={el.answer}\r\n\t\t\t\t\t\t\t\t\t\t\t\treturnAnketsAnswer={this.returnAnketsAnswer}/>\r\n\t\t})\r\n\r\n\t\tlet doneAnket = () => {\r\n\t\t\tif (Object.keys(this.state.anket_answers).length == this.state.anketa_questions.length) {\r\n\t\t\t\ttopFunction();\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tanket_all_answers: true,\r\n\t\t\t\t\tanket: true\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({anket_all_answers: false})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet qSet = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page)\r\n\t\tlet questionList = qSet.map((el, i) => {\r\n\t\t\tlet message;\r\n\t\t\tif (el.type === 'select') {\r\n\t\t\t\tif (this.state.notAnswered.indexOf(i) != -1) {\r\n\t\t\t\t\tmessage = 'Вам следует ответить на этот вопрос'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage = ''\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet type_answers = el.answer;\r\n\t\t\t\tlet title_values = this.state.answer_title_values;\r\n\t\t\t\tlet index_type = title_values.indexOf(type_answers);\r\n\t\t\t\tlet answer = this.state.answer_values_males[index_type][this.state.anket_answers[0]]\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<RadioButton ans={this.state.answers[this.state.first_questions + i]}\r\n\t\t\t\t\t\t\t\t\t\t\t key={this.state.first_questions + i} id={i} index={this.state.first_questions + i}\r\n\t\t\t\t\t\t\t\t\t\t\t title={el.title}\r\n\t\t\t\t\t\t\t\t\t\t\t message={message} answers={answer} returnAnswer={this.returnAnswer}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet axisAverrage = this.state.axis_title.map((el, i) => {\r\n\t\t\tif ((Object.values(this.state.answers).length == Object.values(this.state.questions).length) && (Object.values(this.state.answers).length != Object.values({}).length) && (this.state.all_axis_averrage != [])) {\r\n\t\t\t\tthis.saving_data(this.state)\r\n\t\t\t}\r\n\t\t\treturn (<ScatterLine index={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t axisName={el}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t names={this.state.compass_compare.position}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t partyAxises={this.state.compass_compare.axises}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t partyColor={this.state.partyColor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t axisNearest={this.state.axisNearest[i]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t axisAverrage={this.state.all_axis_averrage[i]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t axisPoints={this.state.axis_points[i]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tlet checkbox = this.state.axis.map((el, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CheckBox key={i} index={i} name={el} title={this.state.axis_title[i]} returnAxisName={this.returnAxisName}/>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tlet chart = () => {\r\n\t\t\tif (this.state.axises != {}) {\r\n\t\t\t\tlet axisesNames = this.state.axis_names\r\n\r\n\t\t\t\tObject.keys(axisesNames).forEach(function (key) {\r\n\t\t\t\t\tif (axisesNames[key] == false)\r\n\t\t\t\t\t\tdelete axisesNames[key];\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Scatter partyColor={this.state.partyColor} myAxis={this.state.total_axis}\r\n\t\t\t\t\t\t\t\t\t\t\t names={this.state.compass_compare.position}\r\n\t\t\t\t\t\t\t\t\t\t\t axises={this.state.batch_axises}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className={'scatter'}>Ось X — {this.state.axis_title[Object.keys(axisesNames)[0]]}</p>\r\n\t\t\t\t\t\t<p className={'scatter'}>Ось Y — {this.state.axis_title[Object.keys(axisesNames)[1]]}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet resultTeacher = () => {\r\n\t\t\tlet distanceIs;\r\n\t\t\tlet names = this.state.compass_compare.position\r\n\t\t\tlet minIs = {\r\n\t\t\t\tidx: \"\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tdistance: Infinity\r\n\t\t\t}\r\n\t\t\tthis.state.compass_compare.axises.map((el, i) => {\r\n\t\t\t\tdistanceIs = distance(this.state.all_axis_averrage, el)\r\n\t\t\t\tif (distanceIs < minIs.distance) {\r\n\t\t\t\t\tminIs.idx = i\r\n\t\t\t\t\tminIs.name = names[i]\r\n\t\t\t\t\tminIs.distance = distanceIs\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (Object.values(this.state.nearestTeacher).length == Object.values({}).length) {\r\n\t\t\t\tthis.setState({nearestTeacher: minIs})\r\n\t\t\t}\r\n\t\t\treturn (<div>\r\n\t\t\t\t<div className={\"resultTeacher\"}>\r\n\t\t\t\t\t<h3>Ближайший вам учитель:</h3>\r\n\t\t\t\t\t<h3>«{minIs.name}»</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={\"resultTeacher\"}>\r\n\t\t\t\t\t<h3>Ваш автопортрет на основе ответов:</h3>\r\n\t\t\t\t\t<div className={\"myLegends\"}>\r\n\t\t\t\t\t\t{this.legendByAxis()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>)\r\n\t\t}\r\n\r\n\t\tlet topFunction = () => {\r\n\t\t\tdocument.body.scrollTop = 0;\r\n\t\t\tdocument.documentElement.scrollTop = 0;\r\n\t\t}\r\n\r\n\t\tlet nextAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"plus\");\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions + this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t\tconst el = document.getElementById(`${whichNotAnswered[0]}`)\r\n\t\t\t\tel.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\tblock: \"start\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tlet previousAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"minus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions - this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet onlyTwoCheckbox = () => {\r\n\t\t\tlet values = Object.values(this.state.axis_names)\r\n\t\t\tconst countTrue = values.filter(el => el == true)\r\n\t\t\tif (countTrue.length == 2) {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: true})\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: false})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst forms = () => {\r\n\t\t\tif (this.state.anket == false) {\r\n\t\t\t\tlet answers = (this.state.anket_all_answers == false) ? \"Вам следует ответить на все вопросы\" : \"\"\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<p className={\"chooseAnswer padding_margin\"}>{answers}</p>\r\n\t\t\t\t\t\t{anket}\r\n\t\t\t\t\t\t<div className={\"buttons\"}>\r\n\t\t\t\t\t\t\t<button onClick={() => doneAnket()}>Начать</button>\r\n\t\t\t\t\t\t\t<button onClick={() => app.auth().signOut()}>Выйти</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else if (this.state.questions.length <= this.state.first_questions && this.state.anket == true) {\r\n\t\t\t\tlet result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\r\n\t\t\t\tlet d = (this.state.compass_compare.axises != undefined) ? resultTeacher() : \"\";\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{d}\r\n\t\t\t\t\t<h2 className=\"content-center full-result\">Развёрнутые результаты:</h2>\r\n\t\t\t\t\t{axisAverrage}\r\n\t\t\t\t\t<h1 className=\"content-center moreResult\">Поиграйтесь с результатами! Выведите их на график!</h1>\r\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые вы хотите отобразить:</h2>\r\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\r\n\t\t\t\t\t<div className=\"choose_axises\">\r\n\t\t\t\t\t\t{checkbox}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{chart()}\r\n\t\t\t\t\t<div className={'result-position'}>\r\n\t\t\t\t\t\t<h3>Ближайший вам учитель по выбранным осям:</h3>\r\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>)\r\n\t\t\t} else {\r\n\t\t\t\tlet previousPageShowing = (this.state.first_questions == 0) ?\r\n\t\t\t\t\t<button style={{display: \"none\"}}>Предыдущая страница</button> :\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Предыдущая страница</button>\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<PrecentOfAnswered lenQuestions={this.state.questions.length} currentQuestions={this.state.first_questions}/>\r\n\t\t\t\t\t{questionList}\r\n\t\t\t\t\t<div className=\"pagination\">\r\n\t\t\t\t\t\t{previousPageShowing}\r\n\t\t\t\t\t\t<button onClick={nextAndScrollTop}>Следующая страница</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t{forms()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, {useCallback, useContext} from \"react\";\nimport {withRouter, Redirect} from \"react-router\";\nimport app, {signInWithGoogle} from \"../../util/firebase\";\nimport {AuthContext} from \"../../util/Auth\";\nimport {Button} from \"@material-ui/core\";\n\nconst LogIn = ({history}) => {\n\n\tconst {currentUser} = useContext(AuthContext);\n\n\tif(currentUser){\n\t\treturn <Redirect to={\"/schoolCompass/\"}/>\n\t}\n\n\treturn (\n\t\t<div className=\"buttons\">\n\t\t<button onClick={() => signInWithGoogle()}>Авторизоваться</button>\n\t\t\t</div>\n\t)\n}\n\nexport default LogIn;","import React, {useContext} from \"react\";\nimport {Route, Redirect} from \"react-router\";\nimport {AuthContext} from \"../../util/Auth\";\n\nconst PrivateRoute = ({component: RouteComponent, ...rest}) => {\n\tconst {currentUser} = useContext(AuthContext);\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={routeProps =>\n\t\t\t\t!!currentUser ? (\n\t\t\t\t<RouteComponent {...routeProps}/>\n\t\t\t) : (\n\t\t\t\t<Redirect to={\"/login\"}/>\n\t\t\t)}\n\t\t/>\n\t)\n}\n\nexport default PrivateRoute","import React, {BrowserRouter, useEffect, Component, useContext} from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/MainPages/Home\";\r\nimport ReactGa from \"react-ga\"\r\nimport {AuthContext, AuthProvider} from \"./util/Auth\";\r\nimport firebase  from \"./util/firebase\";\r\nimport LogIn from \"./Components/Auth/LogIn\"\r\nimport PrivateRoute from \"./Components/Auth/PrivateRoute\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport app from \"./util/firebase\"\r\n\r\nfunction App() {\r\n\r\n\treturn (\r\n\t\t<AuthProvider>\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<PrivateRoute exreact path={\"/schoolCompass/\"} component={Home}/>\r\n\t\t\t\t\t<Route exact path={\"/login\"} component={LogIn}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t\t{/*<Button onClick={() => firebase.auth().signOut()}>выйти</Button>*/}\r\n\t\t</AuthProvider>\r\n\t)\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}